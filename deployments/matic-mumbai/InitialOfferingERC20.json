{
  "address": "0x54E8E8338C475086912Bb1F112D8Ba72bB018D50",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_lunar",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_eth",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalDistributeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minimalProvideAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "userShare",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lunarAmount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "end",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eth",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lunar",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimalProvideAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "provided",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDistributeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalProvided",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawLUNAR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawProvidedETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawUnclaimedLUNAR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x37b4598472d09f3b85e483ab0e491f2247656c6d01faa1ba8ce2dd153451cef8",
  "receipt": {
    "to": null,
    "from": "0x60Aba88d7f833E5e04006acD0D0580fc0c9A4FBC",
    "contractAddress": "0x54E8E8338C475086912Bb1F112D8Ba72bB018D50",
    "transactionIndex": 5,
    "gasUsed": "1025094",
    "logsBloom": "0x
    "blockHash": "0xf7a0feb96cf16108ee4a8633223a1788983a131ac12511c6c8fcb351bb1453be",
    "transactionHash": "0x37b4598472d09f3b85e483ab0e491f2247656c6d01faa1ba8ce2dd153451cef8",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 14549687,
        "transactionHash": "0x37b4598472d09f3b85e483ab0e491f2247656c6d01faa1ba8ce2dd153451cef8",
        "address": "0x54E8E8338C475086912Bb1F112D8Ba72bB018D50",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000060aba88d7f833e5e04006acd0d0580fc0c9a4fbc"
        ],
        "data": "0x",
        "logIndex": 10,
        "blockHash": "0xf7a0feb96cf16108ee4a8633223a1788983a131ac12511c6c8fcb351bb1453be"
      },
      {
        "transactionIndex": 5,
        "blockNumber": 14549687,
        "transactionHash": "0x37b4598472d09f3b85e483ab0e491f2247656c6d01faa1ba8ce2dd153451cef8",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000060aba88d7f833e5e04006acd0d0580fc0c9a4fbc",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000048d659eaa0b0000000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000007c2829bf93ec6fac360000000000000000000000000000000000000000000000000d97e059bcc3500000000000000000000000000000000000000000000000007c287295edd7105c36",
        "logIndex": 11,
        "blockHash": "0xf7a0feb96cf16108ee4a8633223a1788983a131ac12511c6c8fcb351bb1453be"
      }
    ],
    "blockNumber": 14549687,
    "cumulativeGasUsed": "1779154",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xfc6d7fed375e836168599e7316399c592232E40f",
    "0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa",
    1625097600,
    1625529600,
    "800000000000000000000000",
    "75000000000000000000"
  ],
  "solcInputHash": "f4546f4332cbf0602a14ac2625d6e5be",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_lunar\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_eth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalDistributeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimalProvideAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lunarAmount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eth\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lunar\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimalProvideAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"provided\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDistributeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalProvided\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLUNAR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProvidedETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawUnclaimedLUNAR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Initial offering cotract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InitialOfferingERC20.sol\":\"InitialOfferingERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/InitialOfferingERC20.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: GPL-3.0-or-later\\n */\\n\\n///@notice modified version of Hedgic's initial offering contract: https://github.com/hegic/initial-bonding-curve-offering/blob/master/contracts/InitialOffering/HegicInitialOffering.sol\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @notice Initial offering cotract\\n */\\ncontract InitialOfferingERC20 is Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    event Claimed(address indexed account, uint256 userShare, uint256 lunarAmount);\\n    event Received(address indexed account, uint256 ethAmount);\\n\\n    // 1619786847 30.04.2021\\n    uint256 public immutable start;\\n    // START + 5 days\\n    uint256 public immutable end;\\n\\n    // 4% 800_000 LUNARs\\n    uint256 public immutable totalDistributeAmount;\\n    // 75 ETH ~$150000\\n    uint256 public immutable minimalProvideAmount;\\n    uint256 public totalProvided = 0;\\n    mapping(address => uint256) public provided;\\n    IERC20 public immutable lunar;\\n    IERC20 public immutable eth;\\n\\n    constructor(\\n        IERC20 _lunar,\\n        IERC20 _eth,\\n        uint256 _start,\\n        uint256 _end,\\n        uint256 _totalDistributeAmount,\\n        uint256 _minimalProvideAmount\\n    ) {\\n        lunar = _lunar;\\n        eth = _eth;\\n        start = _start;\\n        end = _end;\\n        totalDistributeAmount = _totalDistributeAmount;\\n        minimalProvideAmount = _minimalProvideAmount;\\n    }\\n\\n    function deposit(uint256 _amount) external {\\n        require(start <= block.timestamp, \\\"LUNAR IBCO: offering has not started yet\\\");\\n        require(block.timestamp <= end, \\\"LUNAR IBCO: offering has already ended\\\");\\n\\n        totalProvided += _amount;\\n        provided[msg.sender] += _amount;\\n\\n        eth.safeTransferFrom(address(msg.sender), address(this), _amount);\\n        emit Received(msg.sender, _amount);\\n    }\\n\\n    function claim() external {\\n        require(block.timestamp > end, \\\"LUNAR IBCO: offering must be completed\\\");\\n        require(provided[msg.sender] > 0, \\\"LUNAR IBCO: sender has nothing to claim\\\");\\n\\n        uint256 userShare = provided[msg.sender];\\n        provided[msg.sender] = 0;\\n\\n        if (totalProvided >= minimalProvideAmount) {\\n            uint256 lunarAmount = (totalDistributeAmount * userShare) / totalProvided;\\n            lunar.safeTransfer(msg.sender, lunarAmount);\\n            emit Claimed(msg.sender, userShare, lunarAmount);\\n        } else {\\n            eth.safeTransfer(msg.sender, userShare);\\n            emit Claimed(msg.sender, userShare, 0);\\n        }\\n    }\\n\\n    function withdrawProvidedETH() external onlyOwner {\\n        require(end < block.timestamp, \\\"LUNAR IBCO: offering must be completed\\\");\\n        require(\\n            totalProvided >= minimalProvideAmount,\\n            \\\"LUNAR IBCO: the required amount has not been provided\\\"\\n        );\\n        eth.safeTransfer(owner(), eth.balanceOf(address(this)));\\n    }\\n\\n    function withdrawLUNAR() external onlyOwner {\\n        require(end < block.timestamp, \\\"LUNAR IBCO: offering must be completed\\\");\\n        require(\\n            totalProvided < minimalProvideAmount,\\n            \\\"LUNAR IBCO: The required amount has been provided\\\"\\n        );\\n        lunar.safeTransfer(owner(), lunar.balanceOf(address(this)));\\n    }\\n\\n    function withdrawUnclaimedLUNAR() external onlyOwner {\\n        require(end + 30 days < block.timestamp, \\\"LUNAR IBCO: Withdrawal unavailable yet\\\");\\n        lunar.safeTransfer(owner(), lunar.balanceOf(address(this)));\\n    }\\n}\\n\",\"keccak256\":\"0xdf1626bf826201c73f63c85f28699393db1bb9d5e56567830e57790da61552fd\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x610140604052600060015534801561001657600080fd5b506040516112ff3803806112ff833981016040819052610035916100c5565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160601b0319606096871b8116610100529490951b9093166101205260809190915260a05260c05260e05261011c565b80516001600160a01b03811681146100c057600080fd5b919050565b60008060008060008060c087890312156100dd578182fd5b6100e6876100a9565b95506100f4602088016100a9565b945060408701519350606087015192506080870151915060a087015190509295509295509295565b60805160a05160c05160e0516101005160601c6101205160601c6111176101e86000396000818161016701528181610451015281816108fb01528181610a780152610b04015260008181610240015281816103de0152818161060901526106950152600081816101a6015281816103710152818161072901526109c001526000818161013801526103a101526000818161026f015281816102a60152818161055b015281816106eb01528181610835015261098201526000818161021901526107b501526111176000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639ddb9ee111610097578063d7e981c711610066578063d7e981c71461023b578063e43608d814610262578063efbe1c1c1461026a578063f2fde38b1461029157600080fd5b80639ddb9ee1146101d9578063a9a4a934146101f9578063b6b55f2514610201578063be9a65551461021457600080fd5b80637fc4a199116100d35780637fc4a1991461015a5780638c7c9e0c146101625780638d975992146101a15780638da5cb5b146101c857600080fd5b806302e3cb0b146101055780634e71d92d14610121578063715018a61461012b5780637ee05a3e14610133575b600080fd5b61010e60015481565b6040519081526020015b60405180910390f35b6101296102a4565b005b6101296104b7565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b61012961052b565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610118565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b0316610189565b61010e6101e7366004610f07565b60026020526000908152604090205481565b6101296106be565b61012961020f366004610f4e565b6107b2565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b610129610955565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b61012961029f366004610f07565b610b2b565b7f000000000000000000000000000000000000000000000000000000000000000042116102ec5760405162461bcd60e51b81526004016102e390611002565b60405180910390fd5b336000908152600260205260409020546103585760405162461bcd60e51b815260206004820152602760248201527f4c554e4152204942434f3a2073656e64657220686173206e6f7468696e6720746044820152666f20636c61696d60c81b60648201526084016102e3565b33600090815260026020526040812080549190556001547f000000000000000000000000000000000000000000000000000000000000000011610444576001546000906103c5837f0000000000000000000000000000000000000000000000000000000000000000611080565b6103cf9190611060565b90506104056001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610c15565b604080518381526020810183905233917f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a910160405180910390a25050565b6104786001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610c15565b604080518281526000602082015233917f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a91015b60405180910390a250565b6000546001600160a01b031633146104e15760405162461bcd60e51b81526004016102e390610fcd565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105555760405162461bcd60e51b81526004016102e390610fcd565b426105837f000000000000000000000000000000000000000000000000000000000000000062278d00611048565b106105df5760405162461bcd60e51b815260206004820152602660248201527f4c554e4152204942434f3a205769746864726177616c20756e617661696c61626044820152651b19481e595d60d21b60648201526084016102e3565b6106bc6105f46000546001600160a01b031690565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561065357600080fd5b505afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b9190610f66565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190610c15565b565b6000546001600160a01b031633146106e85760405162461bcd60e51b81526004016102e390610fcd565b427f0000000000000000000000000000000000000000000000000000000000000000106107275760405162461bcd60e51b81526004016102e390611002565b7f0000000000000000000000000000000000000000000000000000000000000000600154106105df5760405162461bcd60e51b815260206004820152603160248201527f4c554e4152204942434f3a2054686520726571756972656420616d6f756e74206044820152701a185cc81899595b881c1c9bdd9a591959607a1b60648201526084016102e3565b427f000000000000000000000000000000000000000000000000000000000000000011156108335760405162461bcd60e51b815260206004820152602860248201527f4c554e4152204942434f3a206f66666572696e6720686173206e6f74207374616044820152671c9d1959081e595d60c21b60648201526084016102e3565b7f00000000000000000000000000000000000000000000000000000000000000004211156108b25760405162461bcd60e51b815260206004820152602660248201527f4c554e4152204942434f3a206f66666572696e672068617320616c726561647960448201526508195b99195960d21b60648201526084016102e3565b80600160008282546108c49190611048565b909155505033600090815260026020526040812080548392906108e8908490611048565b9091555061092390506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610c7d565b60405181815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874906020016104ac565b6000546001600160a01b0316331461097f5760405162461bcd60e51b81526004016102e390610fcd565b427f0000000000000000000000000000000000000000000000000000000000000000106109be5760405162461bcd60e51b81526004016102e390611002565b7f00000000000000000000000000000000000000000000000000000000000000006001541015610a4e5760405162461bcd60e51b815260206004820152603560248201527f4c554e4152204942434f3a2074686520726571756972656420616d6f756e74206044820152741a185cc81b9bdd081899595b881c1c9bdd9a591959605a1b60648201526084016102e3565b6106bc610a636000546001600160a01b031690565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610ac257600080fd5b505afa158015610ad6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afa9190610f66565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190610c15565b6000546001600160a01b03163314610b555760405162461bcd60e51b81526004016102e390610fcd565b6001600160a01b038116610bba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102e3565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040516001600160a01b038316602482015260448101829052610c7890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610cbb565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610cb59085906323b872dd60e01b90608401610c41565b50505050565b6000610d10826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d8d9092919063ffffffff16565b805190915015610c785780806020019051810190610d2e9190610f2e565b610c785760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102e3565b6060610d9c8484600085610da6565b90505b9392505050565b606082471015610e075760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102e3565b843b610e555760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102e3565b600080866001600160a01b03168587604051610e719190610f7e565b60006040518083038185875af1925050503d8060008114610eae576040519150601f19603f3d011682016040523d82523d6000602084013e610eb3565b606091505b5091509150610ec3828286610ece565b979650505050505050565b60608315610edd575081610d9f565b825115610eed5782518084602001fd5b8160405162461bcd60e51b81526004016102e39190610f9a565b600060208284031215610f18578081fd5b81356001600160a01b0381168114610d9f578182fd5b600060208284031215610f3f578081fd5b81518015158114610d9f578182fd5b600060208284031215610f5f578081fd5b5035919050565b600060208284031215610f77578081fd5b5051919050565b60008251610f9081846020870161109f565b9190910192915050565b6020815260008251806020840152610fb981604085016020870161109f565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526026908201527f4c554e4152204942434f3a206f66666572696e67206d75737420626520636f6d6040820152651c1b195d195960d21b606082015260800190565b6000821982111561105b5761105b6110cb565b500190565b60008261107b57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561109a5761109a6110cb565b500290565b60005b838110156110ba5781810151838201526020016110a2565b83811115610cb55750506000910152565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220d70978e339de20dc62217f86da0f7b5327bafc2cf26a10fe62c8f9ced1da357164736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80639ddb9ee111610097578063d7e981c711610066578063d7e981c71461023b578063e43608d814610262578063efbe1c1c1461026a578063f2fde38b1461029157600080fd5b80639ddb9ee1146101d9578063a9a4a934146101f9578063b6b55f2514610201578063be9a65551461021457600080fd5b80637fc4a199116100d35780637fc4a1991461015a5780638c7c9e0c146101625780638d975992146101a15780638da5cb5b146101c857600080fd5b806302e3cb0b146101055780634e71d92d14610121578063715018a61461012b5780637ee05a3e14610133575b600080fd5b61010e60015481565b6040519081526020015b60405180910390f35b6101296102a4565b005b6101296104b7565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b61012961052b565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610118565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b0316610189565b61010e6101e7366004610f07565b60026020526000908152604090205481565b6101296106be565b61012961020f366004610f4e565b6107b2565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b610129610955565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b61012961029f366004610f07565b610b2b565b7f000000000000000000000000000000000000000000000000000000000000000042116102ec5760405162461bcd60e51b81526004016102e390611002565b60405180910390fd5b336000908152600260205260409020546103585760405162461bcd60e51b815260206004820152602760248201527f4c554e4152204942434f3a2073656e64657220686173206e6f7468696e6720746044820152666f20636c61696d60c81b60648201526084016102e3565b33600090815260026020526040812080549190556001547f000000000000000000000000000000000000000000000000000000000000000011610444576001546000906103c5837f0000000000000000000000000000000000000000000000000000000000000000611080565b6103cf9190611060565b90506104056001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610c15565b604080518381526020810183905233917f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a910160405180910390a25050565b6104786001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610c15565b604080518281526000602082015233917f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a91015b60405180910390a250565b6000546001600160a01b031633146104e15760405162461bcd60e51b81526004016102e390610fcd565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105555760405162461bcd60e51b81526004016102e390610fcd565b426105837f000000000000000000000000000000000000000000000000000000000000000062278d00611048565b106105df5760405162461bcd60e51b815260206004820152602660248201527f4c554e4152204942434f3a205769746864726177616c20756e617661696c61626044820152651b19481e595d60d21b60648201526084016102e3565b6106bc6105f46000546001600160a01b031690565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561065357600080fd5b505afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b9190610f66565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190610c15565b565b6000546001600160a01b031633146106e85760405162461bcd60e51b81526004016102e390610fcd565b427f0000000000000000000000000000000000000000000000000000000000000000106107275760405162461bcd60e51b81526004016102e390611002565b7f0000000000000000000000000000000000000000000000000000000000000000600154106105df5760405162461bcd60e51b815260206004820152603160248201527f4c554e4152204942434f3a2054686520726571756972656420616d6f756e74206044820152701a185cc81899595b881c1c9bdd9a591959607a1b60648201526084016102e3565b427f000000000000000000000000000000000000000000000000000000000000000011156108335760405162461bcd60e51b815260206004820152602860248201527f4c554e4152204942434f3a206f66666572696e6720686173206e6f74207374616044820152671c9d1959081e595d60c21b60648201526084016102e3565b7f00000000000000000000000000000000000000000000000000000000000000004211156108b25760405162461bcd60e51b815260206004820152602660248201527f4c554e4152204942434f3a206f66666572696e672068617320616c726561647960448201526508195b99195960d21b60648201526084016102e3565b80600160008282546108c49190611048565b909155505033600090815260026020526040812080548392906108e8908490611048565b9091555061092390506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610c7d565b60405181815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874906020016104ac565b6000546001600160a01b0316331461097f5760405162461bcd60e51b81526004016102e390610fcd565b427f0000000000000000000000000000000000000000000000000000000000000000106109be5760405162461bcd60e51b81526004016102e390611002565b7f00000000000000000000000000000000000000000000000000000000000000006001541015610a4e5760405162461bcd60e51b815260206004820152603560248201527f4c554e4152204942434f3a2074686520726571756972656420616d6f756e74206044820152741a185cc81b9bdd081899595b881c1c9bdd9a591959605a1b60648201526084016102e3565b6106bc610a636000546001600160a01b031690565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610ac257600080fd5b505afa158015610ad6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afa9190610f66565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190610c15565b6000546001600160a01b03163314610b555760405162461bcd60e51b81526004016102e390610fcd565b6001600160a01b038116610bba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102e3565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040516001600160a01b038316602482015260448101829052610c7890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610cbb565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610cb59085906323b872dd60e01b90608401610c41565b50505050565b6000610d10826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d8d9092919063ffffffff16565b805190915015610c785780806020019051810190610d2e9190610f2e565b610c785760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102e3565b6060610d9c8484600085610da6565b90505b9392505050565b606082471015610e075760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102e3565b843b610e555760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102e3565b600080866001600160a01b03168587604051610e719190610f7e565b60006040518083038185875af1925050503d8060008114610eae576040519150601f19603f3d011682016040523d82523d6000602084013e610eb3565b606091505b5091509150610ec3828286610ece565b979650505050505050565b60608315610edd575081610d9f565b825115610eed5782518084602001fd5b8160405162461bcd60e51b81526004016102e39190610f9a565b600060208284031215610f18578081fd5b81356001600160a01b0381168114610d9f578182fd5b600060208284031215610f3f578081fd5b81518015158114610d9f578182fd5b600060208284031215610f5f578081fd5b5035919050565b600060208284031215610f77578081fd5b5051919050565b60008251610f9081846020870161109f565b9190910192915050565b6020815260008251806020840152610fb981604085016020870161109f565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526026908201527f4c554e4152204942434f3a206f66666572696e67206d75737420626520636f6d6040820152651c1b195d195960d21b606082015260800190565b6000821982111561105b5761105b6110cb565b500190565b60008261107b57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561109a5761109a6110cb565b500290565b60005b838110156110ba5781810151838201526020016110a2565b83811115610cb55750506000910152565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220d70978e339de20dc62217f86da0f7b5327bafc2cf26a10fe62c8f9ced1da357164736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Initial offering cotract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 330,
        "contract": "contracts/InitialOfferingERC20.sol:InitialOfferingERC20",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3928,
        "contract": "contracts/InitialOfferingERC20.sol:InitialOfferingERC20",
        "label": "totalProvided",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 3932,
        "contract": "contracts/InitialOfferingERC20.sol:InitialOfferingERC20",
        "label": "provided",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}